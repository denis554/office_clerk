.row.new_report
  .col-md-9
    .hidden
      {{ plot_flot }}
    #placeholder{:style => "width:800px;height:400px;"}
    #legend
  .col-md-3
    = search_form_for @search , :url => office.manage_reports_url , :html => { :class => "form-horizontal" , :role => "form"} do |f|
      .form-group
        = select_tag :type,  options_for_select( { t("order") => "Order" , t("purchase") =>  "Purchase"  } , @type) , :class => "form-control"
      .form-group
        .col-md-4
          = f.label :product_name_cont, t("name")
        .col-md-8
          = f.text_field :product_name_or_product_product_name_cont, :size => 15 , :class => "form-control"
      .form-group
        .col-md-4
          = f.label :supplier , t(:supplier)
        .col-md-8
          = f.collection_select :product_supplier_id_eq, Supplier.all, :id, :supplier_name, {:include_blank => true}, :class=>"form-control"
      .form-group
        .col-md-4
          = f.label :category, t(:category)
        .col-md-8
          = f.collection_select :product_category_id_eq, Category.all, :id, :name, {:include_blank => true}, :class=>"form-control"
      .form-group
        .col-md-4
          = f.label :property , t(:property)
        .col-md-8
          = f.text_field :product_properties_cont, :size => 15 , :class => "form-control"
      .form-group
        .col-md-4
          = f.label :price , t(:price)
        .col-md-4
          = f.text_field :price_gt , :size => 6 , :class => "form-control"
        .col-md-4
          = f.text_field :price_lt , :size => 6 , :class => "form-control"
      .form-group
        %label= t("date_range")
        .date-range-filter
          .col-md-6
            = f.text_field :created_at_gt, :class => 'datepicker form-control' , :value => sort_date(:created_at_gt)
          .col-md-6
            = f.text_field :created_at_lt, :class => 'datepicker form-control', :value => sort_date(:created_at_lt)
      .form-group
        %label= t("group_by")
        %br/
        = select_tag :group_by,  options_for_select( group_options , @group_by) , :class => "form-control"
      .form-group
        .col-md-4
          = t(:price)
          = radio_button_tag :price_or,  :total , :total == @price_or
        .col-md-4
          = t(:profit)
          = radio_button_tag :price_or,  :profit , :profit == @price_or
        .col-md-4
          = t(:quantity)
          = radio_button_tag :price_or,  :quantity , :quantity == @price_or
      .form-group
        .col-md-4
          = f.submit :month , :class => "btn btn-success" , :name => 'period'
        .col-md-4
          = f.submit :week , :class => "btn btn-success" , :name => 'period'
        .col-md-4
          = f.submit :day , :class => "btn btn-success" , :name => 'period'
:javascript
  var app = new Vue({
    el: '.new_report',
    data: {
      suppliers: #{Supplier.all.to_json},
      categories: #{Category.all.to_json},
      items: #{ render( partial: "manage/items.json") },
      tab: 1,
      nameQuery: "",
      categoryQuery: "",
      columns: {inventory: "#{t(:inventory)}" , stock_level: "#{t(:stock_level).split.first}" ,
          stock_diff: "diff", cost: "#{t(:cost)}" ,ordered: "#{t(:order)}" },
      sortOrders: {inventory: 1, cost: 1 , stock_level: 1 , stock_diff: 1, ordered: 1},
      sortKey: "",
      changed: false
    },
    computed: {
      plot_flot: function() {
        $.plot($("#placeholder"), #{@flot_data.to_json} , #{@flot_options.to_json} );
        console.log("PLot")
        return "HI"
      },
      filteredData: function () {
        data = this.products
        if (this.nameQuery) {
          query = this.nameQuery;
          data = data.filter(function(prod) {
            return prod.name.toLowerCase().indexOf(query.toLowerCase()) > -1
          })
        }
        if (this.categoryQuery) {
          query = this.categoryQuery;
          data = data.filter(function(prod) {
            return prod.category.toLowerCase().indexOf(query.toLowerCase()) > -1
          })
        }
        var order = this.sortOrders[this.sortKey] || 1
        var sortKey = this.sortKey
        if(sortKey) {
          data = data.slice().sort(function (a, b) {
            a = parseFloat(a[sortKey])
            b = parseFloat(b[sortKey])
            return (a === b ? 0 : a > b ? 1 : -1) * order
          })
        }
        return data
      }
    },
    filters: {
      capitalize: function (str) {
        return str.charAt(0).toUpperCase() + str.slice(1)
      }
    },
    methods: {
      itemProp: function(item, index , prop) {
        return { value: item[prop] ,
                name: 'basket[items_attributes][' + index +'][' + prop + ']',
                id: 'basket_items_attributes_' + index + '_' + prop
               }
      },
      sortBy: function (key) {
        console.log("Sortby " + key);
        this.sortKey = key;
        this.sortOrders[key] = this.sortOrders[key] * -1;
      },
      submit_basket: function(event){
        event.preventDefault();
        var that = this;
        $.post( '/baskets/' + this.basket.id , $(".edit_basket").serializeArray() , null , "json")
          .done( function( out ) {
          that.changed = false;
          console.log( out );
        }).fail(function() {
          console.log( "error" );
        });

      },
      orders_to_basket: function(){
        for(var i = 0; i < this.products.length; i++) {
          var product = this.products[i]
          if(product.ordered > 0 && !this.in_basket(product)) this.to_basket(product)
        }
        this.changed = true;
      },
      products_to_basket: function(){
        for(var i = 0; i < this.products.length; i++) {
          var product = this.products[i]
          if(product.stock_diff < 0 && !this.in_basket(product)) this.to_basket(product)
        }
        this.changed = true;
      },
      to_basket: function(product){
        var amount = product.ordered + product.stock_level
        if(amount == 0 ) amount = 1
        this.basket.items.push({ name: product.name , quantity: amount,
                      price: product.cost, product_id: product.id});
        this.changed = true;
      }
    }
  })
